const l=JSON.parse('{"key":"v-12f9440c","path":"/guide/Java/Collection.html","title":"Java集合","lang":"zh-CN","frontmatter":{"title":"Java集合","sidebar":"auto"},"headers":[{"level":2,"title":"一、概览","slug":"一、概览","link":"#一、概览","children":[{"level":3,"title":"Collection","slug":"collection","link":"#collection","children":[]},{"level":3,"title":"Map","slug":"map","link":"#map","children":[]}]},{"level":2,"title":"二、集合中的设计模式","slug":"二、集合中的设计模式","link":"#二、集合中的设计模式","children":[{"level":3,"title":"迭代器模式","slug":"迭代器模式","link":"#迭代器模式","children":[]},{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]}]},{"level":2,"title":"三、源码分析","slug":"三、源码分析","link":"#三、源码分析","children":[{"level":3,"title":"ArrayList","slug":"arraylist","link":"#arraylist","children":[]},{"level":3,"title":"LinkedList","slug":"linkedlist","link":"#linkedlist","children":[]},{"level":3,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[]},{"level":3,"title":"ConcurrentHashMap","slug":"concurrenthashmap","link":"#concurrenthashmap","children":[]},{"level":3,"title":"LinkedHashMap","slug":"linkedhashmap","link":"#linkedhashmap","children":[]}]},{"level":2,"title":"其它","slug":"其它","link":"#其它","children":[{"level":3,"title":"Java 中集合框架类关系图","slug":"java-中集合框架类关系图","link":"#java-中集合框架类关系图","children":[]},{"level":3,"title":"集合和数组有什么区别？","slug":"集合和数组有什么区别","link":"#集合和数组有什么区别","children":[]},{"level":3,"title":"怎么确保一个集合不能被修改？","slug":"怎么确保一个集合不能被修改","link":"#怎么确保一个集合不能被修改","children":[]},{"level":3,"title":"Iterator 有什么特点？","slug":"iterator-有什么特点","link":"#iterator-有什么特点","children":[]},{"level":3,"title":"如何边遍历边移除 Collection 中的元素？","slug":"如何边遍历边移除-collection-中的元素","link":"#如何边遍历边移除-collection-中的元素","children":[]},{"level":3,"title":"ArrayList底层数据结构是什么？","slug":"arraylist底层数据结构是什么","link":"#arraylist底层数据结构是什么","children":[]},{"level":3,"title":"为什么 ArrayList 的 elementData 加上 transient 修饰？","slug":"为什么-arraylist-的-elementdata-加上-transient-修饰","link":"#为什么-arraylist-的-elementdata-加上-transient-修饰","children":[]},{"level":3,"title":"说说你对序列化的理解","slug":"说说你对序列化的理解","link":"#说说你对序列化的理解","children":[]},{"level":3,"title":"既然有数组了，为什么还要有ArrayList？","slug":"既然有数组了-为什么还要有arraylist","link":"#既然有数组了-为什么还要有arraylist","children":[]},{"level":3,"title":"ArrayList有什么优缺点？","slug":"arraylist有什么优缺点","link":"#arraylist有什么优缺点","children":[]},{"level":3,"title":"LinkedList 底层数据结构是什么？","slug":"linkedlist-底层数据结构是什么","link":"#linkedlist-底层数据结构是什么","children":[]},{"level":3,"title":"ArrayList 和 LinkedList 的区别是什么？","slug":"arraylist-和-linkedlist-的区别是什么","link":"#arraylist-和-linkedlist-的区别是什么","children":[]},{"level":3,"title":"ArrayList 线程安全吗？","slug":"arraylist-线程安全吗","link":"#arraylist-线程安全吗","children":[]},{"level":3,"title":"多线程场景下如何使用 ArrayList？","slug":"多线程场景下如何使用-arraylist","link":"#多线程场景下如何使用-arraylist","children":[]},{"level":3,"title":"说一下HashSet 的实现原理？","slug":"说一下hashset-的实现原理","link":"#说一下hashset-的实现原理","children":[]},{"level":3,"title":"说一下HashMap底层数据结构？","slug":"说一下hashmap底层数据结构","link":"#说一下hashmap底层数据结构","children":[]},{"level":3,"title":"为什么要改成数组+链表+红黑树？","slug":"为什么要改成数组-链表-红黑树","link":"#为什么要改成数组-链表-红黑树","children":[]},{"level":3,"title":"什么是哈希表？","slug":"什么是哈希表","link":"#什么是哈希表","children":[]},{"level":3,"title":"说一下HashMap的put过程？","slug":"说一下hashmap的put过程","link":"#说一下hashmap的put过程","children":[]},{"level":3,"title":"使用HashMap时，当两个对象的 hashCode 相同怎么办？","slug":"使用hashmap时-当两个对象的-hashcode-相同怎么办","link":"#使用hashmap时-当两个对象的-hashcode-相同怎么办","children":[]},{"level":3,"title":"HashMap的哈希函数怎么设计的吗？","slug":"hashmap的哈希函数怎么设计的吗","link":"#hashmap的哈希函数怎么设计的吗","children":[]},{"level":3,"title":"为什么采用 hashcode 的高 16 位和低 16 位异或能降低 hash 碰撞？","slug":"为什么采用-hashcode-的高-16-位和低-16-位异或能降低-hash-碰撞","link":"#为什么采用-hashcode-的高-16-位和低-16-位异或能降低-hash-碰撞","children":[]},{"level":3,"title":"解决hash冲突的有几种方法？","slug":"解决hash冲突的有几种方法","link":"#解决hash冲突的有几种方法","children":[]},{"level":3,"title":"为什么 HashMap 采用拉链法而不是开放地址法？","slug":"为什么-hashmap-采用拉链法而不是开放地址法","link":"#为什么-hashmap-采用拉链法而不是开放地址法","children":[]},{"level":3,"title":"为什么要用异或运算符？","slug":"为什么要用异或运算符","link":"#为什么要用异或运算符","children":[]},{"level":3,"title":"为什么要做那么多扰动处理？","slug":"为什么要做那么多扰动处理","link":"#为什么要做那么多扰动处理","children":[]},{"level":3,"title":"HashMap的 table 的容量如何确定？","slug":"hashmap的-table-的容量如何确定","link":"#hashmap的-table-的容量如何确定","children":[]},{"level":3,"title":"默认加载因子为什么是0.75？","slug":"默认加载因子为什么是0-75","link":"#默认加载因子为什么是0-75","children":[]},{"level":3,"title":"HashMap 的长度为什么是 2 的 N 次方呢？","slug":"hashmap-的长度为什么是-2-的-n-次方呢","link":"#hashmap-的长度为什么是-2-的-n-次方呢","children":[]},{"level":3,"title":"HashMap 最大容量是多少，为什么？","slug":"hashmap-最大容量是多少-为什么","link":"#hashmap-最大容量是多少-为什么","children":[]},{"level":3,"title":"HashMap为什么用数组而不用ArrayList？","slug":"hashmap为什么用数组而不用arraylist","link":"#hashmap为什么用数组而不用arraylist","children":[]},{"level":3,"title":"当链表长度 >= 8时，为什么要将链表转换成红黑树？","slug":"当链表长度-8时-为什么要将链表转换成红黑树","link":"#当链表长度-8时-为什么要将链表转换成红黑树","children":[]},{"level":3,"title":"new\\tHashMap(12);此时HashMap初始容量为多少？","slug":"newhashmap-12-此时hashmap初始容量为多少","link":"#newhashmap-12-此时hashmap初始容量为多少","children":[]},{"level":3,"title":"说HashMap的resize()扩容过程","slug":"说hashmap的resize-扩容过程","link":"#说hashmap的resize-扩容过程","children":[]},{"level":3,"title":"说说HashMap中get()方法是如何实现的？","slug":"说说hashmap中get-方法是如何实现的","link":"#说说hashmap中get-方法是如何实现的","children":[]},{"level":3,"title":"为什么 HashMap 用红黑树而不是平衡二叉树？","slug":"为什么-hashmap-用红黑树而不是平衡二叉树","link":"#为什么-hashmap-用红黑树而不是平衡二叉树","children":[]},{"level":3,"title":"说说你对红黑树的了解","slug":"说说你对红黑树的了解","link":"#说说你对红黑树的了解","children":[]},{"level":3,"title":"JDK8中，相对JDK7对HashMap做了哪些改变？","slug":"jdk8中-相对jdk7对hashmap做了哪些改变","link":"#jdk8中-相对jdk7对hashmap做了哪些改变","children":[]},{"level":3,"title":"为什么Integer，String\\t适合作HashMap的key呢？","slug":"为什么integer-string适合作hashmap的key呢","link":"#为什么integer-string适合作hashmap的key呢","children":[]},{"level":3,"title":"HashMap中的 key 我们可以使用任何类作为 key 吗？","slug":"hashmap中的-key-我们可以使用任何类作为-key-吗","link":"#hashmap中的-key-我们可以使用任何类作为-key-吗","children":[]},{"level":3,"title":"为什么重写 equals\\t方法的时，需要重写 hashCode 方法呢？","slug":"为什么重写-equals方法的时-需要重写-hashcode-方法呢","link":"#为什么重写-equals方法的时-需要重写-hashcode-方法呢","children":[]},{"level":3,"title":"说说什么是 fail-fast？","slug":"说说什么是-fail-fast","link":"#说说什么是-fail-fast","children":[]}]}],"git":{"updatedTime":1682488526000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":4}]},"filePathRelative":"guide/Java/Collection.md"}');export{l as data};
