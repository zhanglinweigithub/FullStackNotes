const l=JSON.parse('{"key":"v-702b5f04","path":"/guide/Java/JavaJUC.html","title":"Java并发","lang":"zh-CN","frontmatter":{"title":"Java并发","sidebar":"auto"},"headers":[{"level":2,"title":"一、创建线程","slug":"一、创建线程","link":"#一、创建线程","children":[{"level":3,"title":"Thread","slug":"thread","link":"#thread","children":[]},{"level":3,"title":"Runnable","slug":"runnable","link":"#runnable","children":[]},{"level":3,"title":"Callable","slug":"callable","link":"#callable","children":[]},{"level":3,"title":"实现接口 VS 继承 Thread","slug":"实现接口-vs-继承-thread","link":"#实现接口-vs-继承-thread","children":[]}]},{"level":2,"title":"二、线程状态","slug":"二、线程状态","link":"#二、线程状态","children":[{"level":3,"title":"新建（NEW）","slug":"新建-new","link":"#新建-new","children":[]},{"level":3,"title":"可运行（RUNNABLE）","slug":"可运行-runnable","link":"#可运行-runnable","children":[]},{"level":3,"title":"阻塞（BLOCKED）","slug":"阻塞-blocked","link":"#阻塞-blocked","children":[]},{"level":3,"title":"无限期等待（WAITING）","slug":"无限期等待-waiting","link":"#无限期等待-waiting","children":[]},{"level":3,"title":"限期等待（TIMED WAITING）","slug":"限期等待-timed-waiting","link":"#限期等待-timed-waiting","children":[]},{"level":3,"title":"死亡（TERMINATED）","slug":"死亡-terminated","link":"#死亡-terminated","children":[]}]},{"level":2,"title":"三、线程间通信","slug":"三、线程间通信","link":"#三、线程间通信","children":[{"level":3,"title":"join()","slug":"join","link":"#join","children":[]},{"level":3,"title":"wait() notify() notifyAll()","slug":"wait-notify-notifyall","link":"#wait-notify-notifyall","children":[]},{"level":3,"title":"await() signal() signalAll()","slug":"await-signal-signalall","link":"#await-signal-signalall","children":[]}]},{"level":2,"title":"四、线程池","slug":"四、线程池","link":"#四、线程池","children":[{"level":3,"title":"前置概念","slug":"前置概念","link":"#前置概念","children":[]},{"level":3,"title":"ThreadPoolExecutor","slug":"threadpoolexecutor","link":"#threadpoolexecutor","children":[]},{"level":3,"title":"线程池的创建","slug":"线程池的创建","link":"#线程池的创建","children":[]},{"level":3,"title":"方法对比","slug":"方法对比","link":"#方法对比","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]}]},{"level":2,"title":"五、线程池最佳实践","slug":"五、线程池最佳实践","link":"#五、线程池最佳实践","children":[{"level":3,"title":"1、使用ThreadPoolExecutor 创建线程池","slug":"_1、使用threadpoolexecutor-创建线程池","link":"#_1、使用threadpoolexecutor-创建线程池","children":[]},{"level":3,"title":"2、监控线程池运行状态","slug":"_2、监控线程池运行状态","link":"#_2、监控线程池运行状态","children":[]},{"level":3,"title":"3、给线程起个有意义的名字，这样可以方便找 Bug","slug":"_3、给线程起个有意义的名字-这样可以方便找-bug","link":"#_3、给线程起个有意义的名字-这样可以方便找-bug","children":[]},{"level":3,"title":"4、正确配置线程池参数","slug":"_4、正确配置线程池参数","link":"#_4、正确配置线程池参数","children":[]}]},{"level":2,"title":"六、乐观锁和悲观锁","slug":"六、乐观锁和悲观锁","link":"#六、乐观锁和悲观锁","children":[{"level":3,"title":"悲观锁","slug":"悲观锁","link":"#悲观锁","children":[]},{"level":3,"title":"乐观锁","slug":"乐观锁","link":"#乐观锁","children":[]},{"level":3,"title":"实现乐观锁","slug":"实现乐观锁","link":"#实现乐观锁","children":[]},{"level":3,"title":"乐观锁存在的问题","slug":"乐观锁存在的问题","link":"#乐观锁存在的问题","children":[]},{"level":3,"title":"循环时间长开销大","slug":"循环时间长开销大","link":"#循环时间长开销大","children":[]},{"level":3,"title":"只能保证一个共享变量的原子操作","slug":"只能保证一个共享变量的原子操作","link":"#只能保证一个共享变量的原子操作","children":[]}]},{"level":2,"title":"七、ThreadLocal 详解","slug":"七、threadlocal-详解","link":"#七、threadlocal-详解","children":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"使用示例","slug":"使用示例","link":"#使用示例","children":[]},{"level":3,"title":"ThreadLocal 数据结构","slug":"threadlocal-数据结构","link":"#threadlocal-数据结构","children":[]},{"level":3,"title":"GC 之后 key 是否为 null？","slug":"gc-之后-key-是否为-null","link":"#gc-之后-key-是否为-null","children":[]},{"level":3,"title":"ThreadLocal.set()方法源码详解","slug":"threadlocal-set-方法源码详解","link":"#threadlocal-set-方法源码详解","children":[]},{"level":3,"title":"ThreadLocalMap的Hash 算法","slug":"threadlocalmap的hash-算法","link":"#threadlocalmap的hash-算法","children":[]},{"level":3,"title":"ThreadLocalMap的Hash 冲突","slug":"threadlocalmap的hash-冲突","link":"#threadlocalmap的hash-冲突","children":[]},{"level":3,"title":"ThreadLocalMap.set()详解","slug":"threadlocalmap-set-详解","link":"#threadlocalmap-set-详解","children":[]},{"level":3,"title":"ThreadLocalMap过期 key 的探测式清理流程","slug":"threadlocalmap过期-key-的探测式清理流程","link":"#threadlocalmap过期-key-的探测式清理流程","children":[]},{"level":3,"title":"ThreadLocalMap扩容机制","slug":"threadlocalmap扩容机制","link":"#threadlocalmap扩容机制","children":[]},{"level":3,"title":"ThreadLocalMap.get()详解","slug":"threadlocalmap-get-详解","link":"#threadlocalmap-get-详解","children":[]},{"level":3,"title":"ThreadLocalMap过期 key 的启发式清理流程","slug":"threadlocalmap过期-key-的启发式清理流程","link":"#threadlocalmap过期-key-的启发式清理流程","children":[]},{"level":3,"title":"InheritableThreadLocal","slug":"inheritablethreadlocal","link":"#inheritablethreadlocal","children":[]},{"level":3,"title":"ThreadLocal项目中使用实战","slug":"threadlocal项目中使用实战","link":"#threadlocal项目中使用实战","children":[]}]},{"level":2,"title":"八、CompletableFuture 详解","slug":"八、completablefuture-详解","link":"#八、completablefuture-详解","children":[{"level":3,"title":"创建 CompletableFuture","slug":"创建-completablefuture","link":"#创建-completablefuture","children":[]},{"level":3,"title":"处理异步结算的结果","slug":"处理异步结算的结果","link":"#处理异步结算的结果","children":[]},{"level":3,"title":"异常处理","slug":"异常处理","link":"#异常处理","children":[]},{"level":3,"title":"组合 CompletableFuture","slug":"组合-completablefuture","link":"#组合-completablefuture","children":[]},{"level":3,"title":"并行运行多个 CompletableFuture","slug":"并行运行多个-completablefuture","link":"#并行运行多个-completablefuture","children":[]}]},{"level":2,"title":"九、AQS 详解","slug":"九、aqs-详解","link":"#九、aqs-详解","children":[{"level":3,"title":"AQS简介","slug":"aqs简介","link":"#aqs简介","children":[]},{"level":3,"title":"AQS原理","slug":"aqs原理","link":"#aqs原理","children":[]}]}],"git":{"updatedTime":1683443314000,"contributors":[{"name":"zhanglinwei","email":"3498729975@qq.com","commits":4}]},"filePathRelative":"guide/Java/JavaJUC.md"}');export{l as data};
