import{_ as l,M as t,p as c,q as o,R as e,N as s,V as i,t as n,a1 as d}from"./framework-5866ffd3.js";const p={},u=e("h1",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),n(" 目录")],-1),v={class:"table-of-contents"},m=e("h1",{id:"docker镜像仓库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker镜像仓库","aria-hidden":"true"},"#"),n(" Docker镜像仓库")],-1),h=e("p",null,[n("搭建镜像仓库可以基于"),e("code",null,"Docker"),n("官方提供的"),e("code",null,"DockerRegistry"),n("来实现。")],-1),b={href:"https://hub.docker.com/_/registry",target:"_blank",rel:"noopener noreferrer"},k=d(`<h2 id="搭建私有镜像仓库" tabindex="-1"><a class="header-anchor" href="#搭建私有镜像仓库" aria-hidden="true">#</a> 搭建私有镜像仓库</h2><h3 id="简化版镜像仓库" tabindex="-1"><a class="header-anchor" href="#简化版镜像仓库" aria-hidden="true">#</a> 简化版镜像仓库</h3><p><code>Docker</code>官方的<code>Docker Registry</code>是一个基础版本的<code>Docker</code>镜像仓库，具备仓库管理的完整功能，但是没有图形化界面。</p><p>搭建方式比较简单，命令如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> registry	<span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> registry-data:/var/lib/registry <span class="token punctuation">\\</span>
    registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令中挂载了一个数据卷<code>registry-data</code>到容器内的<code>/var/lib/registry</code> 目录，这是私有镜像库存放数据的目录。</p>`,6),g={href:"http://YourIp:5000/v2/_catalog",target:"_blank",rel:"noopener noreferrer"},_=d(`<h3 id="带有图形化界面版本" tabindex="-1"><a class="header-anchor" href="#带有图形化界面版本" aria-hidden="true">#</a> 带有图形化界面版本</h3><p>使用<code>DockerCompose</code>部署带有图象界面的<code>DockerRegistry</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>version: <span class="token string">&#39;3.0&#39;</span>
services:
  registry:
    image: registry
    volumes:
      - ./registry-data:/var/lib/registry
  ui:
    image: joxit/docker-registry-ui:static
    ports:
      - <span class="token number">8080</span>:80
    environment:
      - <span class="token assign-left variable">REGISTRY_TITLE</span><span class="token operator">=</span>我的私有仓库
      - <span class="token assign-left variable">REGISTRY_URL</span><span class="token operator">=</span>http://registry:5000
    depends_on:
      - registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置docker信任地址" tabindex="-1"><a class="header-anchor" href="#配置docker信任地址" aria-hidden="true">#</a> 配置Docker信任地址</h3><p>我们的私服采用的是<code>http</code>协议，默认不被<code>Docker</code>信任，所以需要做一个配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 打开要修改的文件</span>
<span class="token function">vi</span> /etc/docker/daemon.json
<span class="token comment"># 添加内容：</span>
<span class="token string">&quot;insecure-registries&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;http://192.168.150.101:8080&quot;</span><span class="token punctuation">]</span>
<span class="token comment"># 重加载</span>
systemctl daemon-reload
<span class="token comment"># 重启docker</span>
systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="推送、拉取镜像" tabindex="-1"><a class="header-anchor" href="#推送、拉取镜像" aria-hidden="true">#</a> 推送、拉取镜像</h2><p>推送镜像到私有镜像服务必须先<code>tag</code></p><p>① 重新<code>tag</code>本地镜像，名称前缀为私有仓库的地址：192.168.150.101:8080/</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> tag nginx:latest <span class="token number">192.168</span>.150.101:8080/nginx:1.0 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>② 推送镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> push <span class="token number">192.168</span>.150.101:8080/nginx:1.0 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>③ 拉取镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull <span class="token number">192.168</span>.150.101:8080/nginx:1.0 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14);function f(x,y){const a=t("router-link"),r=t("ExternalLinkIcon");return c(),o("div",null,[u,e("nav",v,[e("ul",null,[e("li",null,[s(a,{to:"#搭建私有镜像仓库"},{default:i(()=>[n("搭建私有镜像仓库")]),_:1}),e("ul",null,[e("li",null,[s(a,{to:"#简化版镜像仓库"},{default:i(()=>[n("简化版镜像仓库")]),_:1})]),e("li",null,[s(a,{to:"#带有图形化界面版本"},{default:i(()=>[n("带有图形化界面版本")]),_:1})]),e("li",null,[s(a,{to:"#配置docker信任地址"},{default:i(()=>[n("配置Docker信任地址")]),_:1})])])]),e("li",null,[s(a,{to:"#推送、拉取镜像"},{default:i(()=>[n("推送、拉取镜像")]),_:1})])])]),m,h,e("p",null,[n("官网地址："),e("a",b,[n("https://hub.docker.com/_/registry"),s(r)])]),k,e("p",null,[n("访问"),e("a",g,[n("http://YourIp:5000/v2/_catalog"),s(r)]),n(" 可以查看当前私有镜像服务中包含的镜像")]),_])}const R=l(p,[["render",f],["__file","DockerRepository.html.vue"]]);export{R as default};
