import{_ as o,M as i,p as d,q as n,R as t,N as r,V as p,t as e,a1 as s}from"./framework-5866ffd3.js";const h={},c=t("h1",{id:"目录",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),e(" 目录")],-1),l={class:"table-of-contents"},g=s('<h2 id="隐藏文件、文件夹" tabindex="-1"><a class="header-anchor" href="#隐藏文件、文件夹" aria-hidden="true">#</a> <strong>隐藏文件、文件夹</strong></h2><p>在Linux中以 <code>.</code> 开头的，均是隐藏的。 默认不显示出来，需要 <code>-a</code> 选项才可查看到</p><h2 id="home目录" tabindex="-1"><a class="header-anchor" href="#home目录" aria-hidden="true">#</a> <strong>HOME目录</strong></h2><p>每一个用户在<code>Linux</code>系统中都有自己的专属工作目录，称之为<code>HOME</code>目录。</p><ul><li>普通用户的<code>HOME</code>目录，默认在：<code>/home/用户名</code></li><li><code>root</code>用户的<code>HOME</code>目录，在：<code>/root</code></li></ul><p>FinalShell登陆终端后，默认的工作目录就是用户的<code>HOME</code>目录</p><h2 id="相对路径、绝对路径" tabindex="-1"><a class="header-anchor" href="#相对路径、绝对路径" aria-hidden="true">#</a> <strong>相对路径、绝对路径</strong></h2><ul><li>相对路径， 非 <code>/</code> 开头的称之为相对路径</li></ul><p>相对路径表示以当前目录作为起点，去描述路径，如<code>test/a.txt</code>，表示当前 工作目录内的<code>test</code>文件夹内的<code>a.txt</code>文件</p><ul><li>绝对路径， 以 <code>/</code>开头的称之为绝对路径</li></ul><p>绝对路径从根开始描述路径</p><h2 id="特殊路径符" tabindex="-1"><a class="header-anchor" href="#特殊路径符" aria-hidden="true">#</a> <strong>特殊路径符</strong></h2><ul><li><strong>.</strong> ，表示当前，比如<code>./a.txt</code>，表示当前文件夹内的<code>a.txt</code>文件</li><li><strong>. .</strong> ，表示上级目录，比如 <code>../</code>表示上级目录， <code>../ ../</code>表示上级的上级目录</li><li><strong>~</strong> ，表示用户的<code>HOME</code>目录，比如<code>cd ~</code>，即可切回用户<code>HOME</code>目录</li></ul><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2><p>临时设置： <strong>export 变量名=变量值</strong></p><p>永久设置：</p><p>针对用户，设置用户HOME目录内：<strong>.bashrc文件</strong></p><p>针对全局，设置**/etc/profile**</p><h2 id="path变量" tabindex="-1"><a class="header-anchor" href="#path变量" aria-hidden="true">#</a> PATH变量</h2><p>记录了执行程序的搜索路径</p><p>可以将自定义路径加入PATH内，实现自定义命令在任意地方均可执行的效果</p><h2 id="符号-取出指定的环境变量的值" tabindex="-1"><a class="header-anchor" href="#符号-取出指定的环境变量的值" aria-hidden="true">#</a> $ 符号 取出指定的环境变量的值</h2><p>语法：<strong>$变量名</strong></p><p>示例： echo $PATH，输出PATH环境变量的值</p><p>​ echo ${PATH}ABC，输出PATH环境变量的值以及ABC</p><p>如果变量名和其它内容混淆在一起，可以使用${}</p><h2 id="压缩解压缩" tabindex="-1"><a class="header-anchor" href="#压缩解压缩" aria-hidden="true">#</a> 压缩解压缩</h2><p>Linux系统中常用压缩格式有：**.tar、.gzip、.zip **</p><p>.tar，常见为**.tar**，称之为tarball，归档文件，既简单的将文件组装到一个.tar的文件内，并没有太多文件体积的减少，仅仅是简单的封装</p><p>.gz，也常见为**.tar.gz**，gzip格式压缩文件，即使用gzip压缩算法将文件压缩到一个文件内，可以极大的减少压缩后的体积</p><p>针对以上两种格式，使用<strong>tar</strong>命令均可以进行压缩和解压缩的操作</p><p>zip格式则需要使用<strong>zip</strong>命令进行压缩和解压缩的操作</p><h3 id="压缩" tabindex="-1"><a class="header-anchor" href="#压缩" aria-hidden="true">#</a> 压缩</h3><h4 id="tar、-gzip的压缩" tabindex="-1"><a class="header-anchor" href="#tar、-gzip的压缩" aria-hidden="true">#</a> <strong>.tar、.gzip的压缩</strong></h4><p>tar [-c -v -x -f -z -C] 要压缩的文件1，要压缩的文件2……要压缩的文件N</p><p>选项：</p><p>**-c：**创建压缩文件，用于压缩模式</p><p>**-v：**显示压缩、解压过程，用于查看进度</p><p>**-x：**解压模式</p><p>**-f：**要创建的文件，或要解压的文件，-f必须在所有选项中位置处于最后一个</p><p>**-z：**gzip模式，不使用-z就是普通的tarball格式</p><p>**-C：**选择解压的目的地，用于解压模式</p><p><strong>tar的常用组合（压缩）</strong></p><p>tar -cvf test.tar 1.txt 2.txt 3.txt 将1.txt 2.txt 3.txt压缩到test.tar文件内</p><p>tar -zcvf test.tar.gz 1.txt 2.txt 3.txt 将1.txt 2.txt 3.txt压缩到test.tar.gz文件内，使用gzip模式</p><p><strong>注意：</strong>-z如果使用，需处于选项位第一个。-f必须在选项位最后一个</p><h4 id="zip的压缩" tabindex="-1"><a class="header-anchor" href="#zip的压缩" aria-hidden="true">#</a> <strong>.zip的压缩</strong></h4><p><strong>使用zip命令，压缩为.zip文件</strong></p><p>zip [-r] 参数1 参数2 ……参数N</p><p>-r：被压缩的包含文件夹时，需要用-r选项（和rm命令的-r效果一致）</p><p>例：</p><p>zip test.zip a.txt b.txt c.txt 将a.txt b.txt c.txt压缩到test.zip文件内</p><p>zip -r test.zip test itheima a.txt 将test itheima两个文件夹和 a.txt文件压缩到test.zip文件内</p><h3 id="解压缩" tabindex="-1"><a class="header-anchor" href="#解压缩" aria-hidden="true">#</a> 解压缩</h3><h4 id="tar、-gzip的解压缩" tabindex="-1"><a class="header-anchor" href="#tar、-gzip的解压缩" aria-hidden="true">#</a> <strong>.tar、.gzip的解压缩</strong></h4><p>tar [-c -v -x -f -z -C] 要解压的文件</p><p>选项：</p><p>**-c：**创建压缩文件，用于压缩模式</p><p>**-v：**显示压缩、解压过程，用于查看进度</p><p>**-x：**解压模式</p><p>**-f：**要创建的文件，或要解压的文件，-f必须在所有选项中位置处于最后一个</p><p>**-z：**gzip模式，不使用-z就是普通的tarball格式</p><p>**-C：**选择解压的目的地，用于解压模式</p><p><strong>tar的常用组合（解压缩）</strong></p><p>tar -xvf test.tar 解压test.tar，解压到当前目录</p><p>tar -xvf test.tar -C .home.itheima 解压test.tar，解压到指定目录（.home.itheima）</p><p>tar -zxvf test.tar.gz -C .home.itheima 解压test.tar.gz，解压到指定目录（.home.itheima）</p><p><strong>注意：</strong>-f必须在最后一位，-z必须在开头，-C必须单独使用和解压所需其他参数分开</p><h4 id="zip的解压缩" tabindex="-1"><a class="header-anchor" href="#zip的解压缩" aria-hidden="true">#</a> <strong>.zip的解压缩</strong></h4><p><strong>使用unzip命令，解压.zip的文件</strong></p><p>unzip [-d] 参数</p><p>-d：<strong>指定解压去的位置（同tar的-C）</strong></p><p>参数：被解压的zip压缩包文件</p><p>例：</p><p>unzip test.zip 将test.zip解压到当前目录</p><p>unzip test.zip -d .home.itheima 将test.zip解压到指定目录（.home.itheima）</p>',76);function u(x,z){const a=i("router-link");return d(),n("div",null,[c,t("nav",l,[t("ul",null,[t("li",null,[r(a,{to:"#隐藏文件、文件夹"},{default:p(()=>[e("隐藏文件、文件夹")]),_:1})]),t("li",null,[r(a,{to:"#home目录"},{default:p(()=>[e("HOME目录")]),_:1})]),t("li",null,[r(a,{to:"#相对路径、绝对路径"},{default:p(()=>[e("相对路径、绝对路径")]),_:1})]),t("li",null,[r(a,{to:"#特殊路径符"},{default:p(()=>[e("特殊路径符")]),_:1})]),t("li",null,[r(a,{to:"#环境变量"},{default:p(()=>[e("环境变量")]),_:1})]),t("li",null,[r(a,{to:"#path变量"},{default:p(()=>[e("PATH变量")]),_:1})]),t("li",null,[r(a,{to:"#符号-取出指定的环境变量的值"},{default:p(()=>[e("$ 符号 取出指定的环境变量的值")]),_:1})]),t("li",null,[r(a,{to:"#压缩解压缩"},{default:p(()=>[e("压缩解压缩")]),_:1}),t("ul",null,[t("li",null,[r(a,{to:"#压缩"},{default:p(()=>[e("压缩")]),_:1})]),t("li",null,[r(a,{to:"#解压缩"},{default:p(()=>[e("解压缩")]),_:1})])])])])]),g])}const _=o(h,[["render",u],["__file","LinuxBase.html.vue"]]);export{_ as default};
