import{_ as p,M as l,p as r,q as d,R as s,N as n,V as e,t as a,a1 as i}from"./framework-5866ffd3.js";const o="/FullStackNotes/assets/image-20210725152037611-36202b4d.png",u="/FullStackNotes/assets/image-20210630113929868-c6aeaea2.png",m="/FullStackNotes/assets/image-20210630183914491-47e437ad.png",v="/FullStackNotes/assets/image-20210630201258802-0e593f2f.png",b={},k=s("h1",{id:"目录",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),a(" 目录")],-1),g={class:"table-of-contents"},h=i('<h2 id="搭建主从架构" tabindex="-1"><a class="header-anchor" href="#搭建主从架构" aria-hidden="true">#</a> 搭建主从架构</h2><p>单节点Redis的并发能力是有上限的，要进一步提高Redis的并发能力，就需要搭建主从集群，实现读写分离。</p><h3 id="集群结构" tabindex="-1"><a class="header-anchor" href="#集群结构" aria-hidden="true">#</a> 集群结构</h3><p><img src="'+o+`" alt="image-20210725152037611"></p><p>共包含三个节点，一个主节点，两个从节点。</p><p>这里我们会在同一台虚拟机中开启3个redis实例，模拟主从集群，信息如下：</p><table><thead><tr><th style="text-align:center;">IP</th><th style="text-align:center;">PORT</th><th style="text-align:center;">角色</th></tr></thead><tbody><tr><td style="text-align:center;">192.168.150.101</td><td style="text-align:center;">7001</td><td style="text-align:center;">master</td></tr><tr><td style="text-align:center;">192.168.150.101</td><td style="text-align:center;">7002</td><td style="text-align:center;">slave</td></tr><tr><td style="text-align:center;">192.168.150.101</td><td style="text-align:center;">7003</td><td style="text-align:center;">slave</td></tr></tbody></table><h3 id="准备实例和配置" tabindex="-1"><a class="header-anchor" href="#准备实例和配置" aria-hidden="true">#</a> 准备实例和配置</h3><p>要在同一台虚拟机开启3个实例，必须准备三份不同的配置文件和目录，配置文件所在目录也就是工作目录。</p><p>1）创建目录</p><p>我们创建三个文件夹，名字分别叫7001、7002、7003：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入/tmp目录</span>
<span class="token builtin class-name">cd</span> /tmp
<span class="token comment"># 创建目录</span>
<span class="token function">mkdir</span> <span class="token number">7001</span> <span class="token number">7002</span> <span class="token number">7003</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如图：</p><p><img src="`+u+`" alt="image-20210630113929868"></p><p>2）恢复原始配置</p><p>修改<code>redis.conf</code>文件，将其中的持久化模式改为默认的<code>RDB</code>模式，<code>AOF</code>保持关闭状态。</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 开启RDB</span>
<span class="token comment"># save &quot;&quot;</span>
<span class="token key attr-name">save</span> <span class="token value attr-value">3600 1</span>
<span class="token key attr-name">save</span> <span class="token value attr-value">300 100</span>
<span class="token key attr-name">save</span> <span class="token value attr-value">60 10000</span>

<span class="token comment"># 关闭AOF</span>
<span class="token key attr-name">appendonly</span> <span class="token value attr-value">no</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3）拷贝配置文件到每个实例目录</p><p>然后将<code>redis.conf</code>文件拷贝到三个目录中（在/tmp目录执行下列命令）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 方式一：逐个拷贝</span>
<span class="token function">cp</span> redis-6.2.4/redis.conf <span class="token number">7001</span>
<span class="token function">cp</span> redis-6.2.4/redis.conf <span class="token number">7002</span>
<span class="token function">cp</span> redis-6.2.4/redis.conf <span class="token number">7003</span>

<span class="token comment"># 方式二：管道组合命令，一键拷贝</span>
<span class="token builtin class-name">echo</span> <span class="token number">7001</span> <span class="token number">7002</span> <span class="token number">7003</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token function">cp</span> redis-6.2.4/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4）修改每个实例的端口、工作目录</p><p>修改每个文件夹内的配置文件，将端口分别修改为7001、7002、7003，将<code>rdb</code>文件保存位置都修改为自己所在目录（在/tmp目录执行下列命令）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/6379/7001/g&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/dir .\\//dir \\/tmp\\/7001\\//g&#39;</span> <span class="token number">7001</span>/redis.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/6379/7002/g&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/dir .\\//dir \\/tmp\\/7002\\//g&#39;</span> <span class="token number">7002</span>/redis.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/6379/7003/g&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/dir .\\//dir \\/tmp\\/7003\\//g&#39;</span> <span class="token number">7003</span>/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5）修改每个实例的声明<code>IP</code></p><p>虚拟机本身有多个<code>IP</code>，为了避免将来混乱，我们需要在<code>redis.conf</code>文件中指定每一个实例的绑定<code>ip</code>信息，格式如下：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># redis实例的声明 IP</span>
<span class="token key attr-name">replica-announce-ip</span> <span class="token value attr-value">192.168.150.101</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>每个目录都要改，我们一键完成修改（在/tmp目录执行下列命令）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 逐一执行</span>
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;1a replica-announce-ip 192.168.150.101&#39;</span> <span class="token number">7001</span>/redis.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;1a replica-announce-ip 192.168.150.101&#39;</span> <span class="token number">7002</span>/redis.conf
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;1a replica-announce-ip 192.168.150.101&#39;</span> <span class="token number">7003</span>/redis.conf

<span class="token comment"># 或者一键修改</span>
<span class="token builtin class-name">printf</span> <span class="token string">&#39;%s\\n&#39;</span> <span class="token number">7001</span> <span class="token number">7002</span> <span class="token number">7003</span> <span class="token operator">|</span> <span class="token function">xargs</span> -I<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token parameter variable">-t</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;1a replica-announce-ip 192.168.150.101&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><p>为了方便查看日志，我们打开3个<code>ssh</code>窗口，分别启动3个<code>redis</code>实例，启动命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 第1个</span>
redis-server <span class="token number">7001</span>/redis.conf
<span class="token comment"># 第2个</span>
redis-server <span class="token number">7002</span>/redis.conf
<span class="token comment"># 第3个</span>
redis-server <span class="token number">7003</span>/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动后：</p><p><img src="`+m+`" alt="image-20210630183914491"></p><p>如果要一键停止，可以运行下面命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">printf</span> <span class="token string">&#39;%s\\n&#39;</span> <span class="token number">7001</span> <span class="token number">7002</span> <span class="token number">7003</span> <span class="token operator">|</span> <span class="token function">xargs</span> -I<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token parameter variable">-t</span> redis-cli <span class="token parameter variable">-p</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token function">shutdown</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="开启主从关系" tabindex="-1"><a class="header-anchor" href="#开启主从关系" aria-hidden="true">#</a> 开启主从关系</h3><p>现在三个实例还没有任何关系，要配置主从可以使用<code>replicaof</code> 或者<code>slaveof</code>（5.0以前）命令。</p><p>有临时和永久两种模式：</p><ul><li><p>修改配置文件（永久生效）</p><ul><li>在<code>redis.conf</code>中添加一行配置：<code>slaveof &lt;masterip&gt; &lt;masterport&gt;</code></li></ul></li><li><p>使用<code>redis-cli</code>客户端连接到<code>redis</code>服务，执行<code>slaveof</code>命令（重启后失效）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>slaveof <span class="token operator">&lt;</span>masterip<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>masterport<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul>`,39),f=s("code",null,"replicaof",-1),_=s("code",null,"salveof",-1),x=i(`<p>这里我们为了演示方便，使用方式二。</p><p>通过<code>redis-cli</code>命令连接7002，执行下面命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 连接 7002</span>
redis-cli <span class="token parameter variable">-p</span> <span class="token number">7002</span>
<span class="token comment"># 执行slaveof</span>
slaveof <span class="token number">192.168</span>.150.101 <span class="token number">7001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过<code>redis-cli</code>命令连接7003，执行下面命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 连接 7003</span>
redis-cli <span class="token parameter variable">-p</span> <span class="token number">7003</span>
<span class="token comment"># 执行slaveof</span>
slaveof <span class="token number">192.168</span>.150.101 <span class="token number">7001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后连接 7001节点，查看集群状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 连接 7001</span>
redis-cli <span class="token parameter variable">-p</span> <span class="token number">7001</span>
<span class="token comment"># 查看状态</span>
info replication
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><p><img src="`+v+'" alt="image-20210630201258802"></p><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p>执行下列操作以测试：</p><ul><li><p>利用<code>redis-cli</code>连接7001，执行<code>set num 123</code></p></li><li><p>利用<code>redis-cli</code>连接7002，执行<code>get num</code>，再执行<code>set num 666</code></p></li><li><p>利用<code>redis-cli</code>连接7003，执行<code>get num</code>，再执行<code>set num 888</code></p></li></ul><p>可以发现，只有在7001这个<code>master</code>节点上可以执行写操作，7002和7003这两个<code>slave</code>节点只能执行读操作。</p>',13);function y(N,S){const t=l("router-link"),c=l("font");return r(),d("div",null,[k,s("nav",g,[s("ul",null,[s("li",null,[n(t,{to:"#搭建主从架构"},{default:e(()=>[a("搭建主从架构")]),_:1}),s("ul",null,[s("li",null,[n(t,{to:"#集群结构"},{default:e(()=>[a("集群结构")]),_:1})]),s("li",null,[n(t,{to:"#准备实例和配置"},{default:e(()=>[a("准备实例和配置")]),_:1})]),s("li",null,[n(t,{to:"#启动"},{default:e(()=>[a("启动")]),_:1})]),s("li",null,[n(t,{to:"#开启主从关系"},{default:e(()=>[a("开启主从关系")]),_:1})]),s("li",null,[n(t,{to:"#测试"},{default:e(()=>[a("测试")]),_:1})])])])])]),h,s("p",null,[s("strong",null,[n(c,{color:"red"},{default:e(()=>[a("注意")]),_:1})]),a("：在5.0以后新增命令"),f,a("，与"),_,a("效果一致。")]),x])}const I=p(b,[["render",y],["__file","MasterSlave.html.vue"]]);export{I as default};
