import{_ as p,M as o,p as c,q as l,R as n,N as e,V as t,t as s,a1 as i}from"./framework-5866ffd3.js";const u={},d=n("h1",{id:"目录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),s(" 目录")],-1),r={class:"table-of-contents"},k=i(`<h2 id="全局异常处理" tabindex="-1"><a class="header-anchor" href="#全局异常处理" aria-hidden="true">#</a> 全局异常处理</h2><h3 id="新建全局异常处理类" tabindex="-1"><a class="header-anchor" href="#新建全局异常处理类" aria-hidden="true">#</a> 新建全局异常处理类</h3><p>新建一个 <code>GlobalExceptionHandler</code> 全局异常处理类，然后加上 <code>@ControllerAdvice</code> 注解即可拦截项目中抛出的异常</p><blockquote><p><code>@ControllerAdvice</code> 注解包含了 <code>@Component</code> 注解，说明在 <code>Spring Boot</code> 启动时，也会把该类作为组件交给 <code>Spring</code> 来管理，除此之外，该注解还有个 <code>basePackages</code> 属性， 该属性是用来拦截哪个包中的异常信息</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ControllerAdvice</span>
<span class="token annotation punctuation">@ResponseBody</span> <span class="token comment">// 用于返回JSON数据</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>
    <span class="token comment">// 打印log</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">GlobalExceptionHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// ……</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-exceptionhandler-注解来指定具体的异常" tabindex="-1"><a class="header-anchor" href="#通过-exceptionhandler-注解来指定具体的异常" aria-hidden="true">#</a> 通过 <code>@ExceptionHandler</code> 注解来指定具体的异常</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">MissingServletRequestParameterException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ResponseStatus</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">JsonResult</span> <span class="token function">handleHttpMessageNotReadableException</span><span class="token punctuation">(</span>
        <span class="token class-name">MissingServletRequestParameterException</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;缺少请求参数，{}&quot;</span><span class="token punctuation">,</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonResult</span><span class="token punctuation">(</span><span class="token string">&quot;400&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;缺少必要的请求参数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全部代码" tabindex="-1"><a class="header-anchor" href="#全部代码" aria-hidden="true">#</a> 全部代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ControllerAdvice</span>
<span class="token annotation punctuation">@ResponseBody</span> <span class="token comment">// 用于返回JSON数据</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>
    <span class="token comment">// 打印log</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">GlobalExceptionHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">MissingServletRequestParameterException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
	<span class="token annotation punctuation">@ResponseStatus</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">JsonResult</span> <span class="token function">handleHttpMessageNotReadableException</span><span class="token punctuation">(</span>
        <span class="token class-name">MissingServletRequestParameterException</span> ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;缺少请求参数，{}&quot;</span><span class="token punctuation">,</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// JsonResult 为自定义返回结果类</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonResult</span><span class="token punctuation">(</span><span class="token string">&quot;400&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;缺少必要的请求参数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义异常" tabindex="-1"><a class="header-anchor" href="#自定义异常" aria-hidden="true">#</a> 自定义异常</h2><h3 id="定义类-实现runtimeexception" tabindex="-1"><a class="header-anchor" href="#定义类-实现runtimeexception" aria-hidden="true">#</a> 定义类，实现<code>RuntimeException</code></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 自定义运行时异常
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BusinessErrorException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">7480022450501760611L</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 异常码
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 异常提示信息
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">BusinessErrorException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> businessMsgEnum<span class="token punctuation">.</span><span class="token function">code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> businessMsgEnum<span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	<span class="token comment">// get set方法</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定义异常信息枚举类" tabindex="-1"><a class="header-anchor" href="#定义异常信息枚举类" aria-hidden="true">#</a> 定义异常信息枚举类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">BusinessMsgEnum</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 参数异常
     */</span>
    <span class="token function">PARMETER_EXCEPTION</span><span class="token punctuation">(</span><span class="token string">&quot;102&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;参数异常!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/**
     * 等待超时
     */</span>
    <span class="token function">SERVICE_TIME_OUT</span><span class="token punctuation">(</span><span class="token string">&quot;103&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;服务调用超时！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/**
     * 参数过大
     */</span>
    <span class="token function">PARMETER_BIG_EXCEPTION</span><span class="token punctuation">(</span><span class="token string">&quot;102&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;输入的图片数量不能超过50张!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/**
     * 500 : 一劳永逸的提示也可以在这定义
     */</span>
    <span class="token function">UNEXPECTED_EXCEPTION</span><span class="token punctuation">(</span><span class="token string">&quot;500&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;系统发生异常，请联系管理员！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 还可以定义更多的业务异常</span>
    <span class="token doc-comment comment">/**
     * 消息码
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 消息内容
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">BusinessMsgEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	<span class="token comment">// set get方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在全局异常处理器拦截自定义异常" tabindex="-1"><a class="header-anchor" href="#在全局异常处理器拦截自定义异常" aria-hidden="true">#</a> 在全局异常处理器拦截自定义异常</h3><p>在全局异常处理器中定义方法拦截自定义异常，参考前面说的全局异常处理，这里就不展示了</p><h3 id="模拟抛出" tabindex="-1"><a class="header-anchor" href="#模拟抛出" aria-hidden="true">#</a> 模拟抛出</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/exception&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionController</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">ExceptionController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/business&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">JsonResult</span> <span class="token function">testException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessErrorException</span><span class="token punctuation">(</span><span class="token class-name">BusinessMsgEnum</span><span class="token punctuation">.</span><span class="token constant">UNEXPECTED_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function v(m,b){const a=o("router-link");return c(),l("div",null,[d,n("nav",r,[n("ul",null,[n("li",null,[e(a,{to:"#全局异常处理"},{default:t(()=>[s("全局异常处理")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#新建全局异常处理类"},{default:t(()=>[s("新建全局异常处理类")]),_:1})]),n("li",null,[e(a,{to:"#通过-exceptionhandler-注解来指定具体的异常"},{default:t(()=>[s("通过 @ExceptionHandler 注解来指定具体的异常")]),_:1})]),n("li",null,[e(a,{to:"#全部代码"},{default:t(()=>[s("全部代码")]),_:1})])])]),n("li",null,[e(a,{to:"#自定义异常"},{default:t(()=>[s("自定义异常")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#定义类-实现runtimeexception"},{default:t(()=>[s("定义类，实现RuntimeException")]),_:1})]),n("li",null,[e(a,{to:"#定义异常信息枚举类"},{default:t(()=>[s("定义异常信息枚举类")]),_:1})]),n("li",null,[e(a,{to:"#在全局异常处理器拦截自定义异常"},{default:t(()=>[s("在全局异常处理器拦截自定义异常")]),_:1})]),n("li",null,[e(a,{to:"#模拟抛出"},{default:t(()=>[s("模拟抛出")]),_:1})])])])])]),k])}const h=p(u,[["render",v],["__file","Exception.html.vue"]]);export{h as default};
