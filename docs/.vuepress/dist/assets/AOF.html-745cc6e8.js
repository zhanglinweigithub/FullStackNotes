import{_ as d,M as t,p as c,q as l,R as e,N as n,V as o,t as a,a1 as i}from"./framework-5866ffd3.js";const r="/FullStackNotes/assets/image-20210725151543640-eeea19b7.png",p="/FullStackNotes/assets/image-20210725151654046-f9697d10.png",u="/FullStackNotes/assets/image-20210725151729118-d827d93a.png",m="/FullStackNotes/assets/image-20210725151940515-33dd1bef.png",v={},f=e("h1",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),a(" 目录")],-1),h={class:"table-of-contents"},k=i('<h2 id="aof持久化" tabindex="-1"><a class="header-anchor" href="#aof持久化" aria-hidden="true">#</a> AOF持久化</h2><h3 id="aof原理" tabindex="-1"><a class="header-anchor" href="#aof原理" aria-hidden="true">#</a> AOF原理</h3><p><code>AOF</code>全称为Append Only File（追加文件）。</p><p><code>Redis</code>处理的每一个写命令都会记录在<code>AOF</code>文件，可以看做是命令日志文件。</p><p><img src="'+r+`" alt="image-20210725151543640"></p><h3 id="aof配置" tabindex="-1"><a class="header-anchor" href="#aof配置" aria-hidden="true">#</a> AOF配置</h3><p><code>AOF</code>默认是关闭的，需要修改<code>redis.conf</code>配置文件来开启<code>AOF</code></p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 是否开启AOF功能，默认是no</span>
<span class="token key attr-name">appendonly</span> <span class="token value attr-value">yes</span>
<span class="token comment"># AOF文件的名称</span>
<span class="token key attr-name">appendfilename</span> <span class="token value attr-value">&quot;appendonly.aof&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>AOF</code>的命令记录的频率也可以通过<code>redis.conf</code>文件来配：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 表示每执行一次写命令，立即记录到AOF文件</span>
<span class="token key attr-name">appendfsync</span> <span class="token value attr-value">always </span>
<span class="token comment"># 写命令执行完先放入AOF缓冲区，然后表示每隔1秒将缓冲区数据写到AOF文件，是默认方案</span>
<span class="token key attr-name">appendfsync</span> <span class="token value attr-value">everysec </span>
<span class="token comment"># 写命令执行完先放入AOF缓冲区，由操作系统决定何时将缓冲区内容写回磁盘</span>
<span class="token key attr-name">appendfsync</span> <span class="token value attr-value">no</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>三种策略对比：</p><p><img src="`+p+'" alt="image-20210725151654046"></p><h3 id="aof文件重写" tabindex="-1"><a class="header-anchor" href="#aof文件重写" aria-hidden="true">#</a> AOF文件重写</h3><p>因为是记录命令，<code>AOF</code>文件会比<code>RDB</code>文件大的多。而且<code>AOF</code>会记录对同一个<code>key</code>的多次写操作，但只有最后一次写操作才有意义。</p><p>通过执行<code>bgrewriteaof</code>命令，可以让<code>AOF</code>文件执行重写功能，用最少的命令达到相同效果。</p><p><img src="'+u+`" alt="image-20210725151729118"></p><p>如图，<code>AOF</code>原本有三个命令，但是<code>set num 123 和 set num 666</code>都是对<code>num</code>的操作，第二次会覆盖第一次的值，因此第一个命令记录下来没有意义。</p><p>所以重写命令后，<code>AOF</code>文件内容就是：<code>mset name jack num 666</code></p><p><code>Redis</code>也会在触发阈值时自动去重写<code>AOF</code>文件。阈值也可以在<code>redis.conf</code>中配置：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># AOF文件比上次文件 增长超过多少百分比则触发重写</span>
<span class="token key attr-name">auto-aof-rewrite-percentage</span> <span class="token value attr-value">100</span>
<span class="token comment"># AOF文件体积最小多大以上才触发重写 </span>
<span class="token key attr-name">auto-aof-rewrite-min-size</span> <span class="token value attr-value">64mb </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rdb与aof对比" tabindex="-1"><a class="header-anchor" href="#rdb与aof对比" aria-hidden="true">#</a> RDB与AOF对比</h2><p><code>RDB</code>和<code>AOF</code>各有自己的优缺点，如果对数据安全性要求较高，在实际开发中往往会<strong>结合</strong>两者来使用。</p><p><img src="`+m+'" alt="image-20210725151940515"></p>',23);function F(b,_){const s=t("router-link");return c(),l("div",null,[f,e("nav",h,[e("ul",null,[e("li",null,[n(s,{to:"#aof持久化"},{default:o(()=>[a("AOF持久化")]),_:1}),e("ul",null,[e("li",null,[n(s,{to:"#aof原理"},{default:o(()=>[a("AOF原理")]),_:1})]),e("li",null,[n(s,{to:"#aof配置"},{default:o(()=>[a("AOF配置")]),_:1})]),e("li",null,[n(s,{to:"#aof文件重写"},{default:o(()=>[a("AOF文件重写")]),_:1})])])]),e("li",null,[n(s,{to:"#rdb与aof对比"},{default:o(()=>[a("RDB与AOF对比")]),_:1})])])]),k])}const O=d(v,[["render",F],["__file","AOF.html.vue"]]);export{O as default};
